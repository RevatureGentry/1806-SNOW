--Write a SQL Query that contains the names of all tracks that are longer than 6 minutes
select name from TRACK where milliseconds > 360000;

--Write a SQL Query to find the biggest song (which takes up the most space)

select name from TRACK where milliseconds = (select MAX(milliseconds) from TRACK);

--Write a SQL Query that contains the titles of all albums with tracks longer than 6 minutes in them 
select distinct title from ALBUM INNER JOIN TRACK ON ALBUM.ALBUMID = TRACK.ALBUMID where TRACK.milliseconds > 360000;

--Write a SQL Query that contains the albumId and number of songs in the album 
select albumid, count(albumid) as "Song Count" from TRACK group by albumid;

--NOT DONE Write a SQL query that contains artist's names and the number of tracks they have produced (assume an artist produced a track if it appears in one of their albums)
select distinct a.NAME as "Artist", (select count(ALBUMID) from TRACK where a.artistid = al.artistid) as "Track Count"
from ((artist a
inner join album al
    on a.ARTISTID = al.ARTISTID)
inner join track t
    on al.ALBUMID = t.ALBUMID);
    
--NOT DONEWrite a SQL Query that returns the most purchased media type
select mediatype.name



--Write a SQL Query showing customers not in the US
select * from CUSTOMER where country != 'USA';

--Write a SQL Query showing a unique list of billing countries on the Invoice table
select distinct BILLINGCOUNTRY from INVOICE;

--Write a SQL Query that shows the Invoice Total, Customer Name, Country, and Sales agent for all invoices and customers
select invoice.total, customer.firstname, customer.lastname, customer.country, customer.supportrepid from invoice
inner join customer on invoice.customerid = customer.customerid;

--Write a SQL Query that shows all Tracks, but displays no IDs. Should also include the Album name, Media Type, and Genre
select track.name, album.title as "Album Name", mediatype.name as "Mediate Type", genre.name as "Genre" from (((TRACK
inner join ALBUM on track.albumid = album.albumid)
inner join MEDIATYPE on track.mediatypeid = mediatype.mediatypeid)
inner join GENRE on track.genreid = genre.genreid);

--NOT DONEWrite a SQL Query that returns the Top 40 Songs for 2013

select track.name from ((track
inner join invoiceline on track.trackid = invoiceline.trackid)
inner join invoice on invoiceline.invoiceid = invoice.invoiceid)
where invoice.invoicedate between to_date('01-JAN-2013', 'dd-MON-yy') and to_date('31-DEC-13', 'dd-MON-yy');


--Write a SQL Query that shows which sales agent made the most in sales overall

--Write a SQL Query that shows the top 3 best selling artists 

--Write a SQL Query that returns which albums have no Heavy Metal tracks
select distinct album.title from ((album
inner join track on album.albumid = track.albumid)
inner join genre on track.genreid = genre.genreid) 
where genre.name != 'Heavy Metal';

--Write a SQL Query to find the the managers of employees supporting Brazilian customers 
select employee.reportsto as "Manager id?" from employee
inner join customer on employee.employeeid = customer.supportrepid
where customer.country = 'Brazil';
**Write a SQL Query that contains the names of all tracks that are longer than 6 minutes
select name 
from track 
where milliseconds >= 360000;
	
**Write a SQL Query to find the biggest song (which takes up the most space)
select name, bytes
from   track
where  bytes = (select MAX(bytes) from track);
	
**Write a SQL Query that contains the titles of all albums with tracks longer than 6 minutes in them 
select t.albumid, t.milliseconds, a.title
  from track t 
  JOIN album a on t.albumid = a.albumid
 WHERE  milliseconds  > 360000;
	
**Write a SQL Query that contains the albumId and number of songs in the album 
select albumid, COUNT(albumid) 
from track
group by albumid;
	
**Write a SQL query that contains artist's names and the number of tracks they have produced (assume an artist produced a track if it appears in one of their albums)
select art.name, count(*) as "Tracks Produced"
from artist art
    join album alb on art.artistid = alb.artistid
    join track t on alb.albumid = t.albumid
    group by art.name;

**Write a SQL Query that returns the most purchased media type
select *
from
    (select m.mediatypeid, m.name, SUM(iv.quantity) as "Amount Sold" 
    from mediatype m
            join track t on m.mediatypeid = t.mediatypeid
            join invoiceline iv on t.trackid = iv.trackid
            group by m.mediatypeid, m.name 
            order by SUM(iv.quantity) desc)
    where ROWNUM = 1;
	
**Write a SQL Query showing customers not in the US
select * 
from customer 
where country != 'USA';

**Write a SQL Query showing a unique list of billing countries on the Invoice table
select distinct billingcountry 
from invoice;

**Write a SQL Query that shows the Invoice Total, Customer Name, Country, and Sales agent for all invoices and customers 
select e.firstname || ' ' || e.lastname as "Employee Name", c.firstname || ' ' || c.lastname as "Customer Name", c.country, i.total
from employee  e
	join customer  c on e.employeeid = c.supportrepid
	join invoice  i on c.customerid = i.customerid;

**Write a SQL Query that shows all Tracks, but displays no IDs. Should also include the Album name, Media Type, and Genre
select t.name as track, a.title as album, g.name as genre, m.name as mediatype
from track t
	join album a on a.albumid = t.albumid
	join genre g on g.genreid = t.genreid
	join mediatype m on m.mediatypeid = t.mediatypeid;

**Write a SQL Query that returns the Top 40 Songs for 2013
select * 
from
    (select t.trackid, t.name, SUM(il.quantity) as total 
    from track t
        join invoiceline il on t.trackid = il.trackid
        join invoice i on il.invoiceid = i.invoiceid
        where i.invoicedate between to_date('01-01-2013', 'mm-dd-yyyy')
            and to_date('12-31-2013', 'mm-dd-yyyy')
        group by t.trackid, t.name 
        order by SUM(il.quantity) DESC)
    where ROWNUM <= 40;

**Write a SQL Query that shows which sales agent made the most in sales overall
select * from
    (select e.employeeid, e.firstname || ' ' || e.lastname as "Employee Name", SUM(i.total) as total 
    from employee e
        join customer c on e.employeeid = c.customerid
        join invoice i on c.customerid = i.customerid
        group by e.employeeid, e.firstname || ' ' || e.lastname 
        order by total DESC)
        where ROWNUM = 1;

**Write a SQL Query that shows the top 3 best selling artists
select * from 
    (select art.artistid, art.name, SUM(il.quantity) as total from artist art
        join album alb on art.artistid = alb.artistid
        join track t on alb.albumid = t.albumid
        join invoiceline il on t.trackid = il.trackid
        GROUP BY art.artistid, art.name ORDER BY total DESC)
    where ROWNUM <= 3;

**Write a SQL Query that returns which albums have no Heavy Metal tracks
select distinct g.name, a.title
from genre g
    join track t on g.genreid = t.genreid
    join album a on t.albumid = a.albumid
    where g.name != 'Heavy Metal';

*Write a SQL Query to find the the managers of employees supporting Brazilian customers 
select distinct e.employeeid, e.firstname || ' ' || e.lastname as "Manager Name"
from employee e 
where e.employeeid = any
        (select e.reportsto from employee e
            join customer c on e.employeeid = c.supportrepid
            where c.country = 'Brazil');
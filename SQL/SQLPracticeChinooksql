--Write a SQL Query that contains the names of all tracks that are longer than 6 minutes
select name from track where MILLISECONDS > (60*6000);

--Write a SQL Query to find the biggest song (which takes up the most space)
select MAX(bytes) from track;

--Write a SQL Query that contains the titles of all albums with tracks longer than 6 minutes in them 
select distinct(title) from album a 
    inner join track t on
    a.albumid = t.albumid
    where milliseconds > 60*6000;

    
--Write a SQL Query that contains the albumId and number of songs in the album 
select distinct(albumid), count(*) as NumOfSongs from track
    group by albumid, (albumid)
    having count(*) >= 1;
    
--Write a SQL query that contains artist's names and the number of tracks they have produced (assume an artist produced a track if it appears in one of their albums)
select ar.name, count(t.trackid) as NumOfTracks from Artist ar
    inner join Album al on ar.ARTISTID = al.ARTISTID
    inner join track t on al.ALBUMID = t.ALBUMID
    group by ar.name, al.albumid;
    
    
--Write a SQL Query that returns the most purchased media type
select * from (
select m.name, count(il.quantity) as SoldAmount from track  t
    inner join MEDIATYPE m on t.mediatypeid = m.MEDIATYPEID
    inner join invoiceline il on il.trackid = t.trackid 
    group by m.name
    order by SoldAmount desc
    )
    where rownum = 1;
    
--Write a SQL Query showing customers not in the US
select firstname, lastname, state from CUSTOMER
    where state != 'USA';

--Write a SQL Query showing a unique list of billing countries on the Invoice table
select distinct BILLINGCOUNTRY from invoice;

--Write a SQL Query that shows the Invoice Total, Customer Name, Country, and Sales agent for all invoices and customers 
select i.total, c.firstname, c.lastname, c.Country, e.title from customer c
    inner join invoice i on c.customerid = i.customerid
    inner join employee e on e.employeeid = c.SUPPORTREPID;

--Write a SQL Query that shows all Tracks, but displays no IDs. Should also include the Album name, Media Type, and Genre
select t.name, t.composer, t.milliseconds, t.bytes, t.unitprice,
        g.name, m.name, a.title from track t
    inner join album a on a.albumid = t.albumid
    inner join mediatype m on m.MEDIATYPEID = t.MEDIATYPEID
    inner join genre g on g.genreid = t.GENREID;
    
--Write a SQL Query that returns the Top 40 Songs for 2013
select * from (
    select t.albumid, count(il.quantity) as SoldAmount from track t 
        inner join invoiceline il on il.trackid = t.trackid
        inner join invoice i on i.INVOICEID = il.invoiceid 
        where i.invoicedate between to_date('01-01-13','mm-dd-yy') and to_date('25-12-13','dd/mm/yy') 
        group by t.albumid
        order by SoldAmount desc
    )
    where rownum <=40;




--Write a SQL Query that shows which sales agent made the most in sales overall
select e.firstname, e.lastname, sum(i.total) as SalesTotal from employee e
    inner join customer c on c.SUPPORTREPID = e.EMPLOYEEID
    inner join invoice i on i.CUSTOMERID = c.CUSTOMERID 
    group by e.firstname, e.lastname
    order by SalesTotal desc;
    
    

    
--Write a SQL Query that shows the top 3 best selling artists 
select * from(
select a.NAME, sum(i.TOTAL) as TotalSells from artist a
    inner join album al on al.ARTISTID = a.ARTISTID
    inner join track t on t.ALBUMID = al.ALBUMID
    inner join invoiceline il on il.TRACKID = t.TRACKID
    inner join invoice i on i.INVOICEID = il.INVOICELINEID 
    group by a.NAME
    order by TotalSells desc
    )
    where ROWNUM < 4;
    
--Write a SQL Query that returns which albums have no Heavy Metal track
select distinct a.title from album a 
    inner join track t on t.albumid = a.albumid
    inner join genre g on g.genreid = t.genreid
    where g.genreid != 13;


--Write a SQL Query to find the the managers of employees supporting Brazilian customers 
select distinct e.firstname, e.lastname from (
    select reportsto as e1 from employee e
    full outer join customer c on c.supportrepid = e.EMPLOYEEID
    where c.country = 'Brazil'), employee e
    where e.employeeid = e1;
    
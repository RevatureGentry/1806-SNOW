{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/typecheck.js","webpack:///./src/js/MusicLexer.utils.js","webpack:///./src/js/Player.js","webpack:///./src/js/animations.js","webpack:///./src/js/MusicTranslator.utils.js","webpack:///./src/js/MusicTranslator.js","webpack:///./src/js/TokenConverter.js","webpack:///./src/js/tokens.js","webpack:///./src/js/MusicLexer.js","webpack:///./src/js/MusicGenerator.utils.js","webpack:///./src/js/MusicGenerator.js","webpack:///./src/js/GamePlayer.utils.js","webpack:///./src/js/GamePlayer.js","webpack:///./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","typecheckString","input","Error","typecheckNumber","typecheckBool","preprocess","trimmed","trim","split","verifyToken","token","test","verifyUnit","unit","types","Player","_classCallCheck","this","_instruments","notes","_clearOldMusic","length","push","Tone","Synth","oscillator","type","harmonicity","modulationType","envelope","attackCurve","attack","decay","sustain","release","portamento","toMaster","overall_time","notes_array","dur_array","noteIndex","Transport","schedule","_scheduleNote","cancel","note","duration","instrument","time","triggerAttackRelease","start","pause","stop","createFastArrow","direction","createArrowFn","addFastMoving","createMediumArrow","addMediumMoving","createSlowArrow","addSlowMoving","Direction","LEFT","UP","DOWN","RIGHT","speedFn","isADirection","toString","arrow_left","document","createElement","classList","add","createLeftArrow","arrow_up","createUpArrow","arrow_down","createDownArrow","arrow_right","createRightArrow","addRemoveOnAnimationEnd","arrow","addEventListener","event","remove","console","log","translate","voice_array","units_per_minute","voice_index","duration_count","result","durations","errors","convertCountToDuration","minute_fraction","Math","floor","utils","MusicTranslator","_unit","_units_per_minute","_translation","_errors","unit_note","upm","error_message","voices_array","_clearOldTranslation","_doTranslate","getTranslation","initial_translation","getBaseUnit","getUnitsPerMinute","_addError","errors_array","concat","TokenToNoteConverter","_note_table","Map","_attr_table","tokenPosition","_getNote","NEW_VOICE","MusicLexer","_num_voices","_voices","_token_stream","_token_index","_unit_note","index","music","_doLexing","getAllVoices","_preprocessMusic","_process","_hasMoreMusicTokens","_nextMusicToken","curr_token_index","Tokens","_addNewVoice","_addToken","_tokenIsInLanguage","addNote","convertTokenToNote","token_position","convert","getNumVoices","token_index","extractHeader","header","extracted","header_lines","title","author","modifiers","parseInt","beat","MusicGenerator","lexer","translator","_lexer","_translator","_author","_title","_beat","hasErrors","hasLexerErrors","hasTranslatorErrors","getErrors","getErrorSummary","music_file_string","_clearOldGeneratedMusic","_setHeaderValues","_extractHeaderValues","_lex","_extractScoreValues","_translate","getGeneratedMusic","setUnitsPerMinute","includes","score","lex","convertDurationsToArrowStartTimes","arrow_start_times","reduce","acc","cur","map","Mode","EASY","MEDIUM","HARD","filter","pop","_animations","_GamePlayer","Lane","GamePlayer","_this2","_possibleConstructorReturn","__proto__","getPrototypeOf","_mode","_clearOldArrows","_get","_scheduleArrows","Draw","_createArrow","_this","lane_number","random","lane_id","getElementById","appendChild","_getArrowDirection","_getArrowCreationFn","arrowCreationFn","bound_1","bound_2","fn_selector","generator","existsUserChosenFile","files","getSelectedMusic","selected","LAYLA","window","onload","preview","player","reader","FileReader","target","generate","play","readAsText","playUserChosenFile","playUserChosenMusic","disabled","addPreviewEvents","doPlay","playGameWithChosenFile","setting","querySelector","setMode","playGame","addStartEvents"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","export function typecheckString(input) {\n    if(typeof(input) !== 'string') {\n        throw new Error(\"input is not a string\");\n    }\n}\n\nexport function typecheckNumber(input) {\n    if(typeof(input) !== 'number') {\n        throw new Error(\"input is not a number\");\n    }\n}\n\nexport function typecheckBool(input) {\n    if(typeof(input) !== 'boolean') {\n        throw new Error(\"input is not a boolean\");\n    }\n}","\n\n\nexport function preprocess(input) {\n    typecheckString(input);\n\n    let trimmed = input.trim();\n    if(trimmed === \"\") {\n        return [];\n    } else {\n        return trimmed.split(/[\\s]+/);\n    }\n}\n\nexport function verifyToken(token) {\n    typecheckString(token);\n\n    // See regular expression documentation for JavaScript.\n    let noteFormat = /^([A-G][1-9]?|(!)?~)$/;\n    return noteFormat.test(token);\n}\n\nexport function typecheckString(input) {\n    if(typeof(input) !== 'string') {\n        throw new Error(\"input is not a string\");\n    }\n}\n\nexport function typecheckNumber(input) {\n    if(typeof(input) !== 'number') {\n        throw new Error(\"input is not a number\");\n    }\n}\n\nexport function verifyUnit(unit) {\n    typecheckString(unit);\n\n    //see regex documentation for JavaScript.\n    let unitFormat = /^(([1248])|16)$/;\n    return unitFormat.test(unit);\n\n}","\nimport * as types from \"./typecheck\";\n\n// This class is reponsible for taking a lexed and translated\n// *.music file and playing it in the browser. Therefore it will utilize Tone.js\n\nclass Player {\n    constructor() {\n        this._instruments = [];\n    }\n\n    /*\n        example notes:\n        [  // array of voices.\n            [   // each voice is an array of notes and durations to play them.\n                [\"A4\", \"B4\"],\n                [1, 2], // The intention is to play notes in sequence.\n            ],\n            [\n                [\"C4\", \"D4\"],\n                [3, 5],\n\n                // Note that voices do not play at identical times. \"D4\" will start\n                // when \"B4\" ends. That is how the scheduling works.\n            ]\n        ]\n    */\n    schedule(notes) {\n        this._clearOldMusic();\n\n        for(let i = 0; i < notes.length; i++) {\n            if(notes[i][0].length !== notes[i][1].length) {\n                throw new Error(\"number of notes does not equal number of durations\");\n            }\n            // add an instrument for each voice.\n            this._instruments.push(new Tone.Synth({\n                \"oscillator\" : {\n                    \"type\" : \"amtriangle\",\n                    \"harmonicity\" : 0.5,\n                    \"modulationType\" : \"sine\"\n                },\n                \"envelope\" : {\n                    \"attackCurve\" : 'exponential',\n                    \"attack\" : 0.05,\n                    \"decay\" : 0.2,\n                    \"sustain\" : 0.2,\n                    \"release\" : 1.5,\n                },\n                \"portamento\" : 0.05\n            }).toMaster());\n\n            //for each note-duration pair, schedule the note with correct duration.\n            let overall_time = 0;\n            let notes_array = notes[i][0];\n            let dur_array = notes[i][1];\n            for(let noteIndex = 0; noteIndex < notes_array.length; noteIndex++) {\n                Tone.Transport.schedule(\n                    this._scheduleNote(notes_array[noteIndex], dur_array[noteIndex]),\n                    overall_time\n                );\n\n                // Increment the overall_time for the scheduling of the next note.\n                overall_time += dur_array[noteIndex];\n            }\n        }\n    }\n\n    _clearOldMusic() {\n        Tone.Transport.cancel();\n    }\n\n    _scheduleNote(note, duration) {\n        types.typecheckString(note);\n        types.typecheckNumber(duration);\n\n        let instrument = this._instruments[this._instruments.length - 1];\n        return function playNote(time) {\n            instrument.triggerAttackRelease(note, duration, time);\n        }\n    }\n\n    play() {\n        Tone.Transport.start('+0.1');\n\n        /*\n        let instrument = this._instrument;\n        let instrument_2 = this._instrument_2;\n        return function doPlay(time) {\n            instrument_2.triggerAttackRelease(\"G4\", \"3\", time);\n            instrument.triggerAttackRelease(\"C4\", \"3\", time);\n        }*/\n    }\n\n    pause() {\n        Tone.Transport.pause();\n    }\n\n    stop() {\n        Tone.Transport.stop();\n    }\n}\n\nexport default Player;\n","\n\nimport * as types from \"./typecheck\";\n\n\n\nexport var Direction = {\n    LEFT: 1,\n    UP: 2,\n    DOWN: 3,\n    RIGHT: 4\n}\n/* // Brief test of the exported functions.\nconst lane_1 = document.getElementById(\"lane-1\");\nconst lane_2 = document.getElementById(\"lane-2\");\nconst lane_3 = document.getElementById(\"lane-3\");\nconst lane_4 = document.getElementById(\"lane-4\");\n\nlane_1.appendChild(createFastArrow(Direction.LEFT));\nlane_2.appendChild(createFastArrow(Direction.UP));\nlane_3.appendChild(createSlowArrow(Direction.DOWN));\nlane_4.appendChild(createMediumArrow(Direction.RIGHT));\n*/\n\nexport function createFastArrow(direction) {\n    return (createArrowFn(addFastMoving))(direction);\n}\n\nexport function createMediumArrow(direction) {\n    return (createArrowFn(addMediumMoving))(direction);\n}\n\nexport function createSlowArrow(direction) {\n    return (createArrowFn(addSlowMoving))(direction);\n}\n\nfunction createArrowFn(speedFn) {\n    return function(direction) {\n        types.typecheckNumber(direction);\n        if(!isADirection(direction)) {\n            throw new Error(direction.toString() + \" is not a valid direction\");\n        }\n\n        if(direction === Direction.LEFT) {\n            return speedFn(createLeftArrow());\n        } else if (direction === Direction.UP) {\n            return speedFn(createUpArrow());\n        } else if (direction === Direction.DOWN) {\n            return speedFn(createDownArrow());\n        } else {\n            return speedFn(createRightArrow());\n        }\n\n        function isADirection(direction) {\n            types.typecheckNumber(direction);\n            if(direction !== Direction.LEFT && direction != Direction.RIGHT &&\n                direction !== Direction.UP && direction !== Direction.DOWN) {\n                return false;\n            }\n            return true;\n        }  \n    }\n}\n\n\nfunction addRemoveOnAnimationEnd(arrow) {\n    arrow.addEventListener(\"animationend\", function removeOnEnd(event) {\n        arrow.remove();\n    }, false);\n    return arrow;\n}\n\nfunction addSlowMoving(arrow) {\n    arrow.classList.add(\"moving-arrow-slow\");\n    addRemoveOnAnimationEnd(arrow);\n    \n    return arrow;\n}\n\nfunction addMediumMoving(arrow) {\n    arrow.classList.add(\"moving-arrow-medium\");\n    addRemoveOnAnimationEnd(arrow);\n\n    return arrow;\n}\n\nfunction addFastMoving(arrow) {\n    arrow.classList.add(\"moving-arrow-fast\");\n    addRemoveOnAnimationEnd(arrow);\n\n    return arrow;\n}\n\nfunction createRightArrow() {\n    const arrow_right = document.createElement(\"i\");\n    arrow_right.classList.add(\"fa\", \"fa-arrow-right\", \"moving-arrow\");\n    return arrow_right;\n}\n\nfunction createLeftArrow() {\n    const arrow_left = document.createElement(\"i\");\n    arrow_left.classList.add(\"fa\", \"fa-arrow-left\", \"moving-arrow\");\n    return arrow_left;\n}\n\nfunction createUpArrow() {\n    const arrow_up = document.createElement(\"i\");\n    arrow_up.classList.add(\"fa\", \"fa-arrow-up\", \"moving-arrow\");\n    return arrow_up;\n}\n\nfunction createDownArrow() {\n    const arrow_down = document.createElement(\"i\");\n    arrow_down.classList.add(\"fa\", \"fa-arrow-down\", \"moving-arrow\");\n    return arrow_down;\n}\n\n\nconsole.log(\"animations are running!\");","import * as types from \"./typecheck\";\n\nexport function verifyUnit(unit) {\n    types.typecheckNumber(unit);\n\n    return  unit === 1 ||\n            unit === 2 ||\n            unit === 4 ||\n            unit === 8 ||\n            unit === 16;\n}\n\n/*\n    Returns an array of the form\n    [\n        notes_array,\n        duration_array,\n        errors_array    [OPTIONAL]\n    ]\n*/\nexport function translate(voice_array, unit, units_per_minute) {\n    types.typecheckNumber(unit);\n    types.typecheckNumber(units_per_minute);\n\n    let voice_index = 0;\n    let duration_count = 0;\n\n    const result = [];\n    const notes = [];\n    const durations = [];\n    const errors = [];\n\n    while(voice_index < voice_array.length) {\n        if(voice_array[voice_index] === \"~\") {\n            if(duration_count === 0) {\n                errors.push([voice_array[voice_index], voice_index]);\n            } else {\n                duration_count += 1;\n            }\n        } else {\n            // Then the token is a note.\n\n            // Add the note.\n            notes.push(voice_array[voice_index]);\n\n            // Add the duration of the previous note.\n            if(duration_count > 0) {\n                durations.push(convertCountToDuration(duration_count, unit, units_per_minute));\n            }\n\n            // Reset the duration.\n            duration_count = 1;\n        }\n              \n        // Increment to look at next voice token.\n        voice_index++;\n    };\n\n    // Add the last duration, since it would not have added during the loop.\n    durations.push(convertCountToDuration(duration_count, unit, units_per_minute));\n\n    // TODO: Return correct value by processing the voice_array.\n\n    result.push(notes);\n    result.push(durations);\n    result.push(errors);\n    return result;\n}\n\nexport function convertCountToDuration(duration_count, unit, units_per_minute) {\n    types.typecheckNumber(duration_count);\n    types.typecheckNumber(unit);\n    types.typecheckNumber(units_per_minute);\n\n    const minute_fraction = duration_count / units_per_minute;\n    const duration_in_seconds = Math.floor(minute_fraction * 60 * 1000) / 1000;\n\n    return duration_in_seconds;\n}","\nimport * as types from \"./typecheck\";\nimport * as utils from \"./MusicTranslator.utils\";\n\nclass MusicTranslator {\n    constructor() {\n        // default unit is quarter notes.\n        this._unit = 4;\n\n        // default is 4 units in a minute.\n        this._units_per_minute = 4;\n\n        this._translation = [];\n        this._errors = [];\n    }\n\n\n    setBaseUnit(unit_note) {\n        types.typecheckNumber(unit_note);\n\n        if(! utils.verifyUnit(unit_note)) {\n            throw new Error(\"base unit was not a valid unit. Valid units are \" +\n                                \"'1', '2', '4', '8', '16'\");\n        }\n\n        this._unit = unit_note;\n    }\n\n    getBaseUnit() {\n        return this._unit;\n    }\n\n    setUnitsPerMinute(upm) {\n        types.typecheckNumber(upm);\n        if(upm < 1) {\n            throw new Error(\"units per minute should be at least 1\");\n        }\n\n        this._units_per_minute = upm;\n    }\n\n    getUnitsPerMinute() {\n        return this._units_per_minute;\n    }\n\n    hasErrors() {\n        return this._errors.length > 0;\n    }\n\n    getErrors() {\n        return this._errors;\n    }\n\n    getErrorSummary() {\n        let error_message = \"The translator found the following errors:\\n\\n\";\n        for(let i = 0; i < this._errors.length; i++) {\n            error_message = `${error_message}Token '${this._errors[i][0]}' at position ${this._errors[i][1]} could not be translated\\n`;\n        }\n\n        return error_message;\n    }\n\n    getTranslation() {\n        return this._translation;\n    }\n\n    // This function only takes output from the MusicLexer.\n    // It translates certain tokens to\n    // the appropriate form for Tone.js to consume.\n    // If translation fails, it will report the error.\n    translate(voices_array) {\n        // NOTE. The first array in voices_array will be ignored!\n        // So each voices_array must have a length of 2 or greater to be\n        // translatable.\n        if(voices_array.length < 2) {\n            throw new Error(\"voices array does not contain any voices!\");\n        }\n\n        this._clearOldTranslation();\n\n        for(let i = 1; i < voices_array.length; i++) {\n            this._doTranslate(voices_array[i]);\n        }\n\n        return this.getTranslation();\n    }\n\n    _clearOldTranslation() {\n        this._translation = [];\n        this._errors = [];\n    }\n\n    _doTranslate(voice_array) {\n        const initial_translation = utils.translate(voice_array, this.getBaseUnit(), this.getUnitsPerMinute());\n        const errors = initial_translation[2];\n        if(errors.length > 0) {\n            // Add errors, but proceed with the translation.\n            this._addError(errors);\n        }\n        this._translation.push([initial_translation[0], initial_translation[1]]);\n    }\n\n    _addError(errors_array) {\n        // Errors array will be of the form\n        // [ [err1, pos1], [err2, pos2], [err3, pos3]]\n        this._errors = this._errors.concat(errors_array);\n    }\n}\n\nexport default MusicTranslator;","\n\nimport * as utils from \"./MusicLexer.utils\";\n\nclass TokenToNoteConverter {\n    constructor() {\n        this._note_table = new Map([\n            [\"A\", \"A4\"],\n            [\"B\", \"B4\"],\n            [\"C\", \"C4\"],\n            [\"D\", \"D4\"],\n            [\"E\", \"E4\"],\n            [\"F\", \"F4\"],\n            [\"G\", \"G4\"],\n        ]);\n\n        this._attr_table = new Map([\n            \n        ]);\n    }\n\n    convert(token, tokenPosition) {\n        utils.typecheckString(token);\n        if(typeof(tokenPosition) !== 'number') {\n            throw new Error('tokenPosition is not a number');\n        }\n\n        let complete_note_pattern = /^[A-G][1-9]$/;\n        let shorthand_note_pattern = /^[A-G]$/;\n        let attr_pattern = /^([!]?[~])$/;\n\n        if(shorthand_note_pattern.test(token)) {\n            return this._getNote(token);\n        }\n\n        if(complete_note_pattern.test(token)) {\n            return token;\n        }\n\n        if(attr_pattern.test(token)) {\n            // TODO What token to return? HOw to pair the tokens?\n\n            // This should go with the last non_atr token. But I can't know that yet!\n            return token;\n        }\n\n        throw new Error(\"Conversion failed! Unexpected token!\");\n\n    }\n\n    // Assumes the token is in the table.\n    _getNote(token) {\n        utils.typecheckString(token);\n        return this._note_table.get(token);\n    }\n}\n\n\nexport default TokenToNoteConverter;","\nlet Tokens = {\n    NEW_VOICE: \"NEW\",\n}\n\n\n\n\n\nexport default Tokens;","\n\nimport Tokens from \"./tokens\";\nimport * as utils from \"./MusicLexer.utils.js\";\nimport TokenToNoteConverter from \"./TokenConverter\";\n\n\nclass MusicLexer {\n    constructor() {\n        this._num_voices = 1;\n        this._voices = [[], []];\n        this._token_stream = [];\n        this._token_index = 0;\n        this._errors = [];\n        this._unit_note = \"4\";\n    }\n\n    setUnitNote(unit) {\n        typecheckString(unit);\n        if(!utils.verifyUnit(unit)) {\n            throw new Error(\"invalid unit note\");\n        }\n\n        this._unit_note = unit;\n    }\n\n    getUnitNote() {\n        return this._unit_note;\n    }\n\n    getVoice(index) {\n        if(typeof(index) !== \"number\") {\n            throw new Error(\"index not a number\");\n        }\n\n        if(index < 1) {\n            throw new Error(\"not a valid index. Valid indexes are integers >= 1\");\n        }\n\n        return this._voices[index];\n    }\n\n    getNumVoices() {\n        return this._num_voices;\n    }\n\n    getAllVoices() {\n        return this._voices;\n    }\n\n    getErrors() {\n        return this._errors;\n    }\n\n    hasErrors() {\n        return this._errors.length > 0;\n    }\n\n    getErrorSummary() {\n        let error_message = \"The following errors were found:\\n\\n\";\n        for(let i = 0; i < this._errors.length; i++) {\n            error_message = `${error_message}${this._errors[i][0]} at token position ${this._errors[i][1]}\\n`;\n        }\n        return error_message;\n    }\n\n    lex(music) {\n        utils.typecheckString(music);\n\n        this._clearOldMusic();\n        this._doLexing(music);\n\n        return this.getAllVoices();\n    }\n\n    _clearOldMusic() {\n        // reset token stream\n        this._token_stream = [];\n        this._token_index = 0;\n\n        // Set voices to start at index 1. Index 0 is never used.\n        this._voices = [[], []];\n        this._num_voices = 1;\n\n        // Reset all previously detected errors.\n        this._errors = [];\n    }\n\n    _doLexing(music) {\n        utils.typecheckString(music);\n\n        this._preprocessMusic(music);\n        this._process();\n    }\n\n    _preprocessMusic(music) {\n        utils.typecheckString(music);\n\n        // Split on whitespace only into an array.\n        this._token_stream = utils.preprocess(music);\n    }\n\n    _process() {\n        while(this._hasMoreMusicTokens()) {\n            const token = this._nextMusicToken();\n            const curr_token_index = this._token_index - 1;\n            if(token === Tokens.NEW_VOICE) {\n                this._addNewVoice();\n            } else {\n                this._addToken(token, curr_token_index);\n            }\n        }\n    }\n\n    _hasMoreMusicTokens() {\n        return this._token_index < this._token_stream.length;\n    }\n\n    _nextMusicToken() {\n        let token = this._token_stream[this._token_index];\n        this._token_index += 1;\n\n        return token;\n    }\n\n    _addNewVoice() {\n        this._num_voices += 1;\n        this._voices.push([]);\n    }\n\n    _addToken(token, curr_token_index) {\n        utils.typecheckString(token);\n        utils.typecheckNumber(curr_token_index);\n\n        if(this._tokenIsInLanguage(token)) {\n            this.addNote(this.convertTokenToNote(token, curr_token_index));\n        } else {\n            // Token is not in language. so it is an error. Report it!\n            this._addError(token);\n        }\n    }\n\n    _tokenIsInLanguage(token) {\n        utils.typecheckString(token);\n\n        return utils.verifyToken(token);\n    }\n\n    convertTokenToNote(token, token_position) {\n        utils.typecheckString(token);\n        utils.typecheckNumber(token_position);\n\n        let converter = new TokenToNoteConverter();\n\n        return converter.convert(token, token_position);\n    }\n\n    addNote(note) {\n        utils.typecheckString(note);\n\n        this._voices[this.getNumVoices()].push(note);\n    }\n\n    _addError(token) {\n        utils.typecheckString(token);\n\n        const token_index = this._token_index - 1;\n        this._errors.push([token, token_index]);\n    }\n}\n\n\nexport default MusicLexer;","\nimport * as types from \"./typecheck\";\n/*\n    This function extracts header values from a header string.\n    Headers are expected to take the following form.\n    \"<TITLE> \\n\" +\n    \"<AUTHOR> \\n\" + \n    \"unit <UNIT> upm <UPM> beat <BEAT>\"\n\n    minimal error checking is done. No time.\n*/\nexport function extractHeader(header) {\n    types.typecheckString(header);\n    let extracted = {};\n    const header_lines = header.trim().split(\"\\n\");\n    if(header_lines.length !== 3) {\n        throw new Error(\"header does not have 3 lines. Headers are expected to take the following form:\\n\"\n            + \"<TITLE> \\n\" +\n            \"<AUTHOR> \\n\" + \n            \"unit <UNIT> upm <UPM> beat <BEAT>\"\n        );\n    }\n    extracted.title = header_lines[0].trim();\n    extracted.author = header_lines[1].trim();\n    \n    const modifiers = header_lines[2].trim().split(/[\\s]+/);\n    if(modifiers.length !== 6) {\n        throw new Error(\"header modifiers were not correctly written. Should be of form 'unit <UNIT> upm <UPM> beat <BEAT>\");\n    } \n\n    let i = 0;\n    while(i < modifiers.length) {\n        if(modifiers[i] === \"unit\") {\n            extracted.unit = parseInt(modifiers[i + 1]);\n        } else if (modifiers[i] === \"upm\") {\n            extracted.upm = parseInt(modifiers[i + 1]);\n        } else if (modifiers[i] === \"beat\") {\n            extracted.beat = parseInt(modifiers[i + 1]);\n        } else {\n            throw new Error(\n                `header modifier token ${modifiers[i]} is invalid. Choose from 'unit', 'upm', and 'beat'`\n            );\n        }\n\n        i += 2;\n    }\n\n    return extracted;\n}","\nimport * as types from \"./typecheck\";\nimport * as utils from \"./MusicGenerator.utils\";\n\n\nconst SCORE_START = \"-ScoreStart-\";\n\n\n// The purpose of this class is to convert \n// strings (likely read from files) that Tone.js\n// can use to play music.\nclass MusicGenerator {\n\n    constructor(lexer, translator) {\n        if(!lexer) {\n            throw new Error(\"Must provide a lexer\");\n        }\n\n        if(!translator) {\n            throw new Error(\"Must provide a translator\");\n        }\n\n        this._lexer = lexer;\n        this._translator = translator;\n        this._author = \"\";\n        this._title = \"\";\n        this._beat = 4;\n        this._unit = 4;\n    }\n\n    hasLexerErrors() {\n        return this._lexer.hasErrors();\n    }\n\n    hasTranslatorErrors() {\n        return this._translator.hasErrors();\n    }\n\n    hasErrors() {\n        return this.hasLexerErrors() || this.hasTranslatorErrors();\n    }\n\n    getErrors() {\n        return this._lexer.getErrors().concat(this._translator.getErrors());\n    }\n\n    getErrorSummary() {\n        return this._lexer.getErrorSummary() + this._translator.getErrorSummary();\n    }\n\n    getGeneratedMusic() {\n        return this._translator.getTranslation();\n    }\n\n    getTitle() {\n        return this._title;\n    }\n\n    getAuthor() {\n        return this._author;\n    }\n\n    hasUnit(unit) {\n        return unit === this._unit;\n    }\n\n    hasBeat(beat) {\n        return beat === this._beat;\n    }\n\n    hasUnitsPerMinute(upm) {\n        return upm === this._translator.getUnitsPerMinute();\n    }\n\n    getBpm() {\n        let beats_per_unit = this._beat / this._unit;\n        let bpm = beats_per_unit * this._translator.getUnitsPerMinute();\n        return bpm;\n    }\n\n    generate(music_file_string) {\n        types.typecheckString(music_file_string);\n\n        this._clearOldGeneratedMusic();\n\n        this._setHeaderValues(this._extractHeaderValues(music_file_string) );\n        \n        this._lex(this._extractScoreValues(music_file_string));\n        this._translate();\n        \n        return this.getGeneratedMusic();\n    }\n\n    _clearOldGeneratedMusic() {\n        // No state needs to be cleared.\n    }\n\n    _setHeaderValues(header) {\n        this._title = header.title ? header.title : \"Unknown\";\n        this._author = header.author ? header.author : \"Unknown\";\n        this._translator.setUnitsPerMinute(header.upm ? header.upm : 60);\n        this._unit = header.unit ? header.unit : 4;\n        this._beat = header.beat ? header.beat : 4;\n    }\n\n    _extractHeaderValues(music_file_string) {\n        types.typecheckString(music_file_string);\n        if(!music_file_string.includes(SCORE_START)) {\n            throw new Error(\"music file requires a string '-ScoreStart-' to denote the end of the header\");\n        }\n        const header = utils.extractHeader(music_file_string.split(SCORE_START)[0]);\n\n        return header;\n    }\n\n    _extractScoreValues(music_file_string) {\n        types.typecheckString(music_file_string);\n        if(!music_file_string.includes(SCORE_START)) {\n            throw new Error(`music file requires a string '${SCORE_START}' to denote the start of the score`);\n        }\n        const score = music_file_string.split(SCORE_START)[1];\n        return score;\n    }\n\n    _lex(score) {\n        types.typecheckString(score);\n        this._lexer.lex(score);\n    }\n\n    _translate() {\n        this._translator.translate(this._lexer.getAllVoices());\n    }\n\n}\n\n\nexport default MusicGenerator;\n","export var Mode = {\n    EASY: 0,\n    MEDIUM: 1,\n    HARD: 2\n}\n\n\nexport function convertDurationsToArrowStartTimes(durations, mode) {\n    const arrow_start_times = durations\n        .reduce(function convertToNoteStartTime(acc, cur) {\n            // convert durations to scheduled times\n            acc.push(cur + acc[acc.length - 1]);\n            return acc;\n        }, [0])\n        .map(function convertToArrowStartTime(time) {\n            // TODO TODO : Convert based on MODE.\n            if(mode === Mode.EASY) {\n                return time - 4;\n            } else if (mode === Mode.MEDIUM) {\n                return time - 4;  // 7 ?\n            } else if (mode === Mode.HARD) {\n                return time - 4    // 10 ?\n            } else {\n                throw new Error(\"invalid mode deteceted: \" + mode.toString());\n            }\n        })\n        .filter(function isPositive(time) {  // Get rid of negative start times.\n            return time >= 0;\n        });\n\n    // Unfortunately the last time is not valid, because no note is scheduled\n    // to begin then.\n    arrow_start_times.pop();\n\n    return arrow_start_times;\n}","\n\nimport * as types from \"./typecheck\";\nimport { Direction, createFastArrow, createMediumArrow, createSlowArrow } from \"./animations\";\nimport Player from \"./Player\";\nimport * as utils from \"./GamePlayer.utils\";\nimport { Mode } from \"./GamePlayer.utils\";\n\n\nvar Lane = {\n    LEFT: 1,\n    UP: 2,\n    DOWN: 3,\n    RIGHT: 4,\n}\n\nclass GamePlayer extends Player {\n    constructor() {\n        super();\n        this._mode = Mode.EASY;\n    }\n\n    getMode() {\n        return this._mode;\n    }\n\n    setMode(mode) {\n        if(mode !== Mode.EASY && mode !== Mode.MEDIUM && mode !== Mode.HARD) {\n            throw new Error(\"Valid modes: '0', '1', '2'\");\n        }\n\n        this._mode = mode;\n    }\n\n    /*\n        example notes:\n        [  // array of voices.\n            [   // each voice is an array of notes and durations to play them.\n                [\"A4\", \"B4\"],\n                [1, 2], // The intention is to play notes in sequence.\n            ],\n            [\n                [\"C4\", \"D4\"],\n                [3, 5],\n\n                // Note that voices do not play at identical times. \"D4\" will start\n                // when \"B4\" ends. That is how the scheduling works.\n            ]\n        ]\n    */\n    schedule(notes) {\n        this._clearOldArrows();\n        super.schedule(notes);\n\n        for(let i = 0; i < notes.length; i++) {\n            const durations = notes[i][1];\n            const arrow_start_times = utils.convertDurationsToArrowStartTimes(durations, this._mode);\n            this._scheduleArrows(arrow_start_times);\n        }   \n    }\n\n    _clearOldArrows() {\n        Tone.Draw.cancel();\n    }\n\n    /*  arrow_start_times is an arrow of valid times that an arrow could start.\n        Times are in seconds. Times cannot be negative.\n    */\n    _scheduleArrows(arrow_start_times) {\n        console.log(\"Scheduling the game in mode \" + this._mode.toString());\n        const createArrowFn = this._createArrow;\n        const _this = this;\n        for(let i = 0; i < arrow_start_times.length; i++) {\n            Tone.Transport.schedule(function(time) {\n                Tone.Draw.schedule(function drawArrow() {\n                    const num_lanes = 4;\n                    const lane_number = 1 + Math.floor(Math.random() * num_lanes);\n                    const arrow = createArrowFn.call(_this, lane_number);\n                    const lane_id = \"lane-\" + lane_number.toString();\n                    document.getElementById(lane_id).appendChild(arrow);\n                });\n            }, arrow_start_times[i]);\n        }\n    }\n\n    _createArrow(lane_number) {\n        types.typecheckNumber(lane_number);\n        const direction = this._getArrowDirection(lane_number);\n        const arrowCreationFn = this._getArrowCreationFn();\n\n        return arrowCreationFn(direction);\n    }\n\n    // TODO : move this to utils and TEST IT.\n    _getArrowDirection(lane_number) {\n        types.typecheckNumber(lane_number);\n        if(lane_number === Lane.LEFT) {\n            return Direction.LEFT;\n        } else if (lane_number === Lane.UP) {\n            return Direction.UP;\n        } else if (lane_number === Lane.DOWN) {\n            return Direction.DOWN;\n        } else if (lane_number === Lane.RIGHT) {\n            return Direction.RIGHT;\n        } else {\n            throw new Error(lane_number.toString() + \" is not a valid lane number. Valid numbers are 1, 2, 3, and 4\");\n        }\n    }\n\n    _getArrowCreationFn() {\n        let bound_1;\n        let bound_2;\n        if(this._mode === Mode.EASY) {\n            bound_1 = 70;\n            bound_2 = 90;\n        } else if (this._mode === Mode.MEDIUM) {\n            bound_1 = 40;\n            bound_2 = 70;\n        } else if (this._mode === Mode.HARD) {\n            bound_1 = 20;\n            bound_2 = 50;\n        } else {\n            throw new Error(\"Not a valid mode\");\n        }\n\n\n        const max = 100;\n        const fn_selector = Math.floor(Math.random() * max);\n\n         // TODO : Maybe split this lower part of the function out into\n         // A testable utils function? Encapsulate the functionality\n         // away from the randomness!!\n\n        if(fn_selector >= 0 && fn_selector < bound_1) {\n            return createSlowArrow;\n        } else if (fn_selector >= bound_1 && fn_selector < bound_2) {\n            return createMediumArrow;\n        } else if (fn_selector >= bound_2 && fn_selector < max) {\n            return createFastArrow;\n        } else {\n            throw new Error(fn_selector.toString() + \" is out of range\");\n        }\n    }    \n}\n\nexport { GamePlayer, Mode };","import Player from \"./Player\";\nimport MusicGenerator from \"./MusicGenerator\";\nimport MusicLexer from \"./MusicLexer\";\nimport MusicTranslator from \"./MusicTranslator\";\nimport * as types from \"./typecheck\";\nimport { GamePlayer, Mode } from \"./GamePlayer\";\n\n(function main() {\n    const generator = new MusicGenerator(new MusicLexer(), new MusicTranslator());\n\n    window.onload = function initUserInteractions(event) {\n        console.log(\"Script running at load\");\n\n        addPreviewEvents();\n        addStartEvents();\n    };\n\n    function addPreviewEvents() {\n        const preview = document.getElementById(\"start-preview\");\n        const stop = document.getElementById(\"stop-preview\");\n        const player = new Player();\n\n        preview.addEventListener('click', function startPreview(event) {\n            playUserChosenMusic();\n            preview.disabled = true;\n            stop.disabled = false;\n        });\n\n        stop.addEventListener('click', function stopPreview(event) {\n            player.stop();\n            preview.disabled = false;\n            stop.disabled = true;\n        });\n\n        function playUserChosenMusic() {\n            // TODO : For each music playing,\n            // Check if compilation errors occurred!\n            // IF SO, DON'T PLAY THE MUSIC!!!\n            // DISPLAY AN ERROR MESSAGE AND ASK THEM TO CONFIRM.\n            // Or at least display an error message\n            // before starting.\n            if(existsUserChosenFile()) {\n                playUserChosenFile();\n            } else {\n                playUserSelectedMusic();\n            }\n    \n            function playUserChosenFile() {\n                let reader = new FileReader();\n                reader.onload = function returnFileAsString(event) {\n                    // When the file has been read, start playing it.\n                    console.log(event.target.result);\n                    generator.generate(event.target.result);\n                    player.schedule(generator.getGeneratedMusic());\n                    player.play();\n                };\n                reader.readAsText(document.getElementById(\"user-music\").files[0]);\n            }\n    \n            function playUserSelectedMusic() {\n                generator.generate(getSelectedMusic());\n                player.schedule(generator.getGeneratedMusic());\n                player.play();\n            }\n        }\n    }\n\n    function addStartEvents() {\n        const start = document.getElementById(\"start-game\");\n        const pause = document.getElementById(\"pause-game\");\n        const player = new GamePlayer();\n\n\n        start.addEventListener('click', function startGame(event) {\n            // TODO : Allow player to pause game and restart game!\n            // Currently clicking start again after pausing will\n            // play the game again from the start, which is VERY\n            // problematic.\n            // Perhaps the best thing to do would be to have a pause menu come up?\n            // Or have a Resume button that activates only when the game is paused.\n\n            playGame();\n            console.log(\"play game!\");\n\n            start.disabled = true;\n            pause.disabled = false;\n        });\n\n        pause.addEventListener('click', function pauseGame(event) {\n            // TODO: Pause the game. But don't RESET it!!!!\n            start.disabled = false;\n            pause.disabled = true;\n            console.log(\"pause game!\");\n        });\n\n        function playGame() {\n            // TODO : For each music playing,\n            // Check if compilation errors occurred!\n            // IF SO, DON'T PLAY THE MUSIC!!!\n            // DISPLAY AN ERROR MESSAGE AND ASK THEM TO CONFIRM.\n            // Or at least display an error message\n            // before starting.\n            if(existsUserChosenFile()) {\n                console.log(\"A file is selected!\");\n                playGameWithChosenFile();\n            } else {\n                console.log(\"no file was selected\");\n                playGameWithSelectionMusic();\n            }\n    \n            function playGameWithChosenFile() {\n                const reader = new FileReader();\n                reader.onload = function(event) {\n                    const music = event.target.result;\n                    generator.generate(music);\n                    doPlay(generator.getGeneratedMusic());\n                }\n                reader.readAsText(document.getElementById(\"user-music\").files[0]);\n            }\n    \n            function playGameWithSelectionMusic() {\n                const music = generator.generate(getSelectedMusic());\n                doPlay(music);\n            }\n\n            function doPlay(music) {\n                const setting = document.querySelector('input[name = \"difficulty\"]:checked').value;\n                console.log(setting);\n                if(setting === \"easy\" ) {\n                    player.setMode(Mode.EASY);\n                } else if (setting === \"medium\") {\n                    player.setMode(Mode.MEDIUM);\n                } else if (setting === \"hard\") {\n                    player.setMode(Mode.HARD);\n                } else {\n                    throw new Error(\"Invalid mode selected for DDR\");\n                }\n                // Music is an array generated by the generator.\n                // DOES NOT CHECK that music is in correct form!\n                player.schedule(music);\n                player.play();\n\n            }\n        }\n    }\n\n    function existsUserChosenFile() {\n        return document.getElementById(\"user-music\").files.length > 0;\n    }\n\n    function getSelectedMusic() {\n        const selected = document.getElementById(\"provided-music\").value;\n        if(selected === \"layla\") {\n            return LAYLA;\n        } else if (selected === \"duck\") {\n            return LAYLA;\n        } else if (selected === \"user\") {\n            return LAYLA;\n        } else {\n            throw new Error(\"An invalid selection was made!\");\n        }\n    }\n\n\n    var LAYLA = \n        \"Layla \\n\" +\n        \"Eric Clapton \\n\" +\n        \"unit 16 upm 240 beat 4 \\n \" +\n        \"-ScoreStart- \\n\" +\n        \"A5 C6 D6 E6 D6 A5 C6 ~ ~ ~ E5 E5 E5 ~ D5 D5 C5 D5 E5\";\n})();"],"sourceRoot":""}
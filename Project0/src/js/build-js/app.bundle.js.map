{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/utils/typecheck.js","webpack:///./src/js/lexer/MusicLexer.utils.js","webpack:///./src/js/player/Player.js","webpack:///./src/js/translator/MusicTranslator.utils.js","webpack:///./src/js/translator/MusicTranslator.js","webpack:///./src/js/lexer/TokenConverter.js","webpack:///./src/js/lexer/tokens.js","webpack:///./src/js/lexer/MusicLexer.js","webpack:///./src/js/generator/MusicGenerator.utils.js","webpack:///./src/js/generator/MusicGenerator.js","webpack:///./src/js/index-utils/utils.js","webpack:///./src/js/index-utils/arrow-events.js","webpack:///./src/js/index-utils/preview-events.js","webpack:///./src/js/game-player/GamePlayer.utils.js","webpack:///./src/js/game-player/animations.js","webpack:///./src/js/game-player/GamePlayer.js","webpack:///./src/js/index-utils/start-events.js","webpack:///./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","typecheckString","input","Error","typecheckNumber","typecheckBool","preprocess","trimmed","trim","split","verifyToken","token","test","verifyUnit","unit","types","Player","_classCallCheck","this","_instruments","notes","_clearOldMusic","length","push","Tone","Synth","oscillator","type","harmonicity","modulationType","envelope","attackCurve","attack","decay","sustain","release","portamento","toMaster","overall_time","notes_array","dur_array","noteIndex","Transport","schedule","_scheduleNote","cancel","note","duration","instrument","time","triggerAttackRelease","start","pause","stop","translate","voice_array","units_per_minute","voice_index","duration_count","result","durations","errors","convertCountToDuration","minute_fraction","Math","floor","utils","MusicTranslator","_unit","_units_per_minute","_translation","_errors","unit_note","upm","error_message","voices_array","_clearOldTranslation","_doTranslate","getTranslation","initial_translation","getBaseUnit","getUnitsPerMinute","_addError","errors_array","concat","TokenToNoteConverter","_note_table","Map","_attr_table","tokenPosition","_getNote","NEW_VOICE","MusicLexer","_num_voices","_voices","_token_stream","_token_index","_unit_note","index","music","_doLexing","getAllVoices","_preprocessMusic","_process","_hasMoreMusicTokens","_nextMusicToken","curr_token_index","Tokens","_addNewVoice","_addOrRejectToken","_tokenIsInLanguage","_addNote","_convertTokenToNote","token_position","convert","getNumVoices","token_index","extractHeader","header","extracted","header_lines","title","author","modifiers","parseInt","beat","MusicGenerator","lexer","translator","_lexer","_translator","_author","_title","_beat","hasErrors","hasLexerErrors","hasTranslatorErrors","getErrors","getErrorSummary","music_file_string","_clearOldGeneratedMusic","_setHeaderValues","_extractHeaderValues","_lex","_extractScoreValues","_translate","getGeneratedMusic","setUnitsPerMinute","includes","score","lex","existsUserChosenFile","document","getElementById","files","getSelectedMusic","LAYLA","selected","addArrowEvents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","id","arrow_id","toString","arrow","addEventListener","event","classList","remove","_iterator","iterator","next","done","err","return","addPreviewEvents","generator","previewBtn","stopBtn","player","reader","FileReader","onload","console","log","target","generate","play","readAsText","playUserChosenFile","playUserChosenMusic","disabled","convertDurationsToArrowStartAndEndTimes","arrow_start_times","reduce","acc","cur","map","Mode","EASY","MEDIUM","HARD","filter","times_array","pop","createFastArrow","direction","createArrowFn","addFastMoving","createMediumArrow","addMediumMoving","createSlowArrow","addSlowMoving","Direction","LEFT","UP","DOWN","RIGHT","speedFn","isADirection","arrow_left","createElement","add","createLeftArrow","arrow_up","createUpArrow","arrow_down","createDownArrow","arrow_right","createRightArrow","addRemoveOnAnimationEnd","animationName","_animations","_GamePlayer","Lane","GamePlayer","_this2","_possibleConstructorReturn","__proto__","getPrototypeOf","_mode","_count","_clearOldArrows","_get","arrow_start_end_times","_scheduleArrows","Draw","_this3","_createArrow","_this","lane_number","random","arrow_duration","lane_id","scheduleArrowCompletion","_scheduleArrowCompletion","appendChild","_getArrowDirection","_getArrowCreationFn","arrowCreationFn","completion_time","checkTime","code","isArrowKey","preventDefault","abs","seconds","removeEventListener","innerText","addStartEvents","doPlay","playGameWithChosenFile","setting","querySelector","setMode","playGame","start_events","preview_events","arrow_events","window"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","export function typecheckString(input) {\n    if(typeof(input) !== 'string') {\n        throw new Error(\"input is not a string\");\n    }\n}\n\nexport function typecheckNumber(input) {\n    if(typeof(input) !== 'number') {\n        throw new Error(\"input is not a number\");\n    }\n}\n\nexport function typecheckBool(input) {\n    if(typeof(input) !== 'boolean') {\n        throw new Error(\"input is not a boolean\");\n    }\n}","\n\n\nexport function preprocess(input) {\n    typecheckString(input);\n\n    let trimmed = input.trim();\n    if(trimmed === \"\") {\n        return [];\n    } else {\n        return trimmed.split(/[\\s]+/);\n    }\n}\n\nexport function verifyToken(token) {\n    typecheckString(token);\n\n    // See regular expression documentation for JavaScript.\n    let noteFormat = /^([A-G][1-9]?|(!)?~)$/;\n    return noteFormat.test(token);\n}\n\nexport function typecheckString(input) {\n    if(typeof(input) !== 'string') {\n        throw new Error(\"input is not a string\");\n    }\n}\n\nexport function typecheckNumber(input) {\n    if(typeof(input) !== 'number') {\n        throw new Error(\"input is not a number\");\n    }\n}\n\nexport function verifyUnit(unit) {\n    typecheckString(unit);\n\n    //see regex documentation for JavaScript.\n    let unitFormat = /^(([1248])|16)$/;\n    return unitFormat.test(unit);\n\n}","\nimport * as types from \"../utils/typecheck\";\n\n// This class is reponsible for taking a lexed and translated\n// *.music file and playing it in the browser. Therefore it will utilize Tone.js\n// To use this class, schedule notes. Then Play, Pause, and/or Stop them.\n\nclass Player {\n    constructor() {\n        this._instruments = [];\n    }\n\n    /*\n        example notes:\n        [  // array of voices.\n            [   // each voice is an array of notes and durations to play them.\n                [\"A4\", \"B4\"],\n                [1, 2], // The intention is to play notes in sequence.\n            ],\n            [\n                [\"C4\", \"D4\"],\n                [3, 5],\n\n                // Note that voices do not play at identical times. \"D4\" will start\n                // when \"B4\" ends. That is how the scheduling works.\n            ]\n        ]\n    */\n    schedule(notes) {\n        this._clearOldMusic();\n\n        for(let i = 0; i < notes.length; i++) {\n            if(notes[i][0].length !== notes[i][1].length) {\n                throw new Error(\"number of notes does not equal number of durations\");\n            }\n            // add an instrument for each voice.\n            this._instruments.push(new Tone.Synth({\n                \"oscillator\" : {\n                    \"type\" : \"amtriangle\",\n                    \"harmonicity\" : 0.5,\n                    \"modulationType\" : \"sine\"\n                },\n                \"envelope\" : {\n                    \"attackCurve\" : 'exponential',\n                    \"attack\" : 0.05,\n                    \"decay\" : 0.2,\n                    \"sustain\" : 0.2,\n                    \"release\" : 0.5,\n                },\n                \"portamento\" : 0.05\n            }).toMaster());\n\n            //for each note-duration pair, schedule the note with correct duration.\n            let overall_time = 0;\n            let notes_array = notes[i][0];\n            let dur_array = notes[i][1];\n            for(let noteIndex = 0; noteIndex < notes_array.length; noteIndex++) {\n                Tone.Transport.schedule(\n                    this._scheduleNote(notes_array[noteIndex], dur_array[noteIndex]),\n                    overall_time\n                );\n\n                // Increment the overall_time for the scheduling of the next note.\n                overall_time += dur_array[noteIndex];\n            }\n        }\n    }\n\n    _clearOldMusic() {\n        Tone.Transport.cancel();\n    }\n\n    _scheduleNote(note, duration) {\n        types.typecheckString(note);\n        types.typecheckNumber(duration);\n\n        let instrument = this._instruments[this._instruments.length - 1];\n        return function playNote(time) {\n            instrument.triggerAttackRelease(note, duration, time);\n        }\n    }\n\n    play() {\n        Tone.Transport.start('+0.1');\n\n        /*\n        let instrument = this._instrument;\n        let instrument_2 = this._instrument_2;\n        return function doPlay(time) {\n            instrument_2.triggerAttackRelease(\"G4\", \"3\", time);\n            instrument.triggerAttackRelease(\"C4\", \"3\", time);\n        }*/\n    }\n\n    pause() {\n        Tone.Transport.pause();\n    }\n\n    stop() {\n        Tone.Transport.stop();\n    }\n}\n\nexport default Player;\n","import * as types from \"../utils/typecheck\";\n\nexport function verifyUnit(unit) {\n    types.typecheckNumber(unit);\n\n    return  unit === 1 ||\n            unit === 2 ||\n            unit === 4 ||\n            unit === 8 ||\n            unit === 16;\n}\n\n/*\n    Returns an array of the form\n    [\n        notes_array,\n        duration_array,\n        errors_array    [OPTIONAL]\n    ]\n*/\nexport function translate(voice_array, unit, units_per_minute) {\n    types.typecheckNumber(unit);\n    types.typecheckNumber(units_per_minute);\n\n    let voice_index = 0;\n    let duration_count = 0;\n\n    const result = [];\n    const notes = [];\n    const durations = [];\n    const errors = [];\n\n    while(voice_index < voice_array.length) {\n        if(voice_array[voice_index] === \"~\") {\n            if(duration_count === 0) {\n                errors.push([voice_array[voice_index], voice_index]);\n            } else {\n                duration_count += 1;\n            }\n        } else {\n            // Then the token is a note.\n\n            // Add the note.\n            notes.push(voice_array[voice_index]);\n\n            // Add the duration of the previous note.\n            if(duration_count > 0) {\n                durations.push(convertCountToDuration(duration_count, unit, units_per_minute));\n            }\n\n            // Reset the duration.\n            duration_count = 1;\n        }\n              \n        // Increment to look at next voice token.\n        voice_index++;\n    };\n\n    // Add the last duration, since it would not have added during the loop.\n    durations.push(convertCountToDuration(duration_count, unit, units_per_minute));\n\n    // TODO: Return correct value by processing the voice_array.\n\n    result.push(notes);\n    result.push(durations);\n    result.push(errors);\n    return result;\n}\n\nexport function convertCountToDuration(duration_count, unit, units_per_minute) {\n    types.typecheckNumber(duration_count);\n    types.typecheckNumber(unit);\n    types.typecheckNumber(units_per_minute);\n\n    const minute_fraction = duration_count / units_per_minute;\n    const duration_in_seconds = Math.floor(minute_fraction * 60 * 1000) / 1000;\n\n    return duration_in_seconds;\n}","\nimport * as types from \"../utils/typecheck\";\nimport * as utils from \"./MusicTranslator.utils\";\n\nclass MusicTranslator {\n    constructor() {\n        // default unit is quarter notes.\n        this._unit = 4;\n\n        // default is 4 units in a minute.\n        this._units_per_minute = 4;\n\n        this._translation = [];\n        this._errors = [];\n    }\n\n\n    setBaseUnit(unit_note) {\n        types.typecheckNumber(unit_note);\n\n        if(! utils.verifyUnit(unit_note)) {\n            throw new Error(\"base unit was not a valid unit. Valid units are \" +\n                                \"'1', '2', '4', '8', '16'\");\n        }\n\n        this._unit = unit_note;\n    }\n\n    getBaseUnit() {\n        return this._unit;\n    }\n\n    setUnitsPerMinute(upm) {\n        types.typecheckNumber(upm);\n        if(upm < 1) {\n            throw new Error(\"units per minute should be at least 1\");\n        }\n\n        this._units_per_minute = upm;\n    }\n\n    getUnitsPerMinute() {\n        return this._units_per_minute;\n    }\n\n    hasErrors() {\n        return this._errors.length > 0;\n    }\n\n    getErrors() {\n        return this._errors;\n    }\n\n    getErrorSummary() {\n        let error_message = \"The translator found the following errors:\\n\\n\";\n        for(let i = 0; i < this._errors.length; i++) {\n            error_message = `${error_message}Token '${this._errors[i][0]}' at position ${this._errors[i][1]} could not be translated\\n`;\n        }\n\n        return error_message;\n    }\n\n    getTranslation() {\n        return this._translation;\n    }\n\n    // This function only takes output from the MusicLexer.\n    // It translates certain tokens to\n    // the appropriate form for Tone.js to consume.\n    // If translation fails, it will report the error.\n    translate(voices_array) {\n        // NOTE. The first array in voices_array will be ignored!\n        // So each voices_array must have a length of 2 or greater to be\n        // translatable.\n        if(voices_array.length < 2) {\n            throw new Error(\"voices array does not contain any voices!\");\n        }\n\n        this._clearOldTranslation();\n\n        for(let i = 1; i < voices_array.length; i++) {\n            this._doTranslate(voices_array[i]);\n        }\n\n        return this.getTranslation();\n    }\n\n    _clearOldTranslation() {\n        this._translation = [];\n        this._errors = [];\n    }\n\n    _doTranslate(voice_array) {\n        const initial_translation = utils.translate(voice_array, this.getBaseUnit(), this.getUnitsPerMinute());\n        const errors = initial_translation[2];\n        if(errors.length > 0) {\n            // Add errors, but proceed with the translation.\n            this._addError(errors);\n        }\n        this._translation.push([initial_translation[0], initial_translation[1]]);\n    }\n\n    _addError(errors_array) {\n        // Errors array will be of the form\n        // [ [err1, pos1], [err2, pos2], [err3, pos3]]\n        this._errors = this._errors.concat(errors_array);\n    }\n}\n\nexport default MusicTranslator;","\n\nimport * as utils from \"./MusicLexer.utils\";\n\nclass TokenToNoteConverter {\n    constructor() {\n        this._note_table = new Map([\n            [\"A\", \"A4\"],\n            [\"B\", \"B4\"],\n            [\"C\", \"C4\"],\n            [\"D\", \"D4\"],\n            [\"E\", \"E4\"],\n            [\"F\", \"F4\"],\n            [\"G\", \"G4\"],\n        ]);\n\n        this._attr_table = new Map([\n            \n        ]);\n    }\n\n    convert(token, tokenPosition) {\n        utils.typecheckString(token);\n        if(typeof(tokenPosition) !== 'number') {\n            throw new Error('tokenPosition is not a number');\n        }\n\n        let complete_note_pattern = /^[A-G][1-9]$/;\n        let shorthand_note_pattern = /^[A-G]$/;\n        let attr_pattern = /^([!]?[~])$/;\n\n        if(shorthand_note_pattern.test(token)) {\n            return this._getNote(token);\n        }\n\n        if(complete_note_pattern.test(token)) {\n            return token;\n        }\n\n        if(attr_pattern.test(token)) {\n            // TODO What token to return? HOw to pair the tokens?\n\n            // This should go with the last non_atr token. But I can't know that yet!\n            return token;\n        }\n\n        throw new Error(\"Conversion failed! Unexpected token!\");\n\n    }\n\n    // Assumes the token is in the table.\n    _getNote(token) {\n        utils.typecheckString(token);\n        return this._note_table.get(token);\n    }\n}\n\n\nexport default TokenToNoteConverter;","\nlet Tokens = {\n    NEW_VOICE: \"NEW\",\n}\n\n\n\n\n\nexport default Tokens;","\n\nimport Tokens from \"./tokens\";\nimport * as utils from \"./MusicLexer.utils.js\";\nimport TokenToNoteConverter from \"./TokenConverter\";\n\n\nclass MusicLexer {\n    constructor() {\n        this._num_voices = 1;\n        this._voices = [[], []];\n        this._token_stream = [];\n        this._token_index = 0;\n        this._errors = [];\n        this._unit_note = \"4\";\n    }\n\n    setUnitNote(unit) {\n        typecheckString(unit);\n        if(!utils.verifyUnit(unit)) {\n            throw new Error(\"invalid unit note\");\n        }\n\n        this._unit_note = unit;\n    }\n\n    getUnitNote() {\n        return this._unit_note;\n    }\n\n    getVoice(index) {\n        if(typeof(index) !== \"number\") {\n            throw new Error(\"index not a number\");\n        }\n\n        if(index < 1) {\n            throw new Error(\"not a valid index. Valid indexes are integers >= 1\");\n        }\n\n        return this._voices[index];\n    }\n\n    getNumVoices() {\n        return this._num_voices;\n    }\n\n    getAllVoices() {\n        return this._voices;\n    }\n\n    getErrors() {\n        return this._errors;\n    }\n\n    hasErrors() {\n        return this._errors.length > 0;\n    }\n\n    getErrorSummary() {\n        let error_message = \"The following errors were found:\\n\\n\";\n        for(let i = 0; i < this._errors.length; i++) {\n            error_message = `${error_message}${this._errors[i][0]} at token position ${this._errors[i][1]}\\n`;\n        }\n        return error_message;\n    }\n\n    lex(music) {\n        utils.typecheckString(music);\n\n        this._clearOldMusic();\n        this._doLexing(music);\n\n        return this.getAllVoices();\n    }\n\n    _clearOldMusic() {\n        // reset token stream\n        this._token_stream = [];\n        this._token_index = 0;\n\n        // Set voices to start at index 1. Index 0 is never used.\n        this._voices = [[], []];\n        this._num_voices = 1;\n\n        // Reset all previously detected errors.\n        this._errors = [];\n    }\n\n    _doLexing(music) {\n        utils.typecheckString(music);\n\n        this._preprocessMusic(music);\n        this._process();\n    }\n\n    _preprocessMusic(music) {\n        utils.typecheckString(music);\n\n        // Split on whitespace only into an array.\n        this._token_stream = utils.preprocess(music);\n    }\n\n    _process() {\n        while(this._hasMoreMusicTokens()) {\n            const token = this._nextMusicToken();\n            const curr_token_index = this._token_index - 1;\n            if(token === Tokens.NEW_VOICE) {\n                this._addNewVoice();\n            } else {\n                this._addOrRejectToken(token, curr_token_index);\n            }\n        }\n    }\n\n    _hasMoreMusicTokens() {\n        return this._token_index < this._token_stream.length;\n    }\n\n    _nextMusicToken() {\n        let token = this._token_stream[this._token_index];\n        this._token_index += 1;\n\n        return token;\n    }\n\n    _addNewVoice() {\n        this._num_voices += 1;\n        this._voices.push([]);\n    }\n\n    _addOrRejectToken(token, curr_token_index) {\n        utils.typecheckString(token);\n        utils.typecheckNumber(curr_token_index);\n\n        if(this._tokenIsInLanguage(token)) {\n            this._addNote(this._convertTokenToNote(token, curr_token_index));\n        } else {\n            // Token is not in language. so it is an error. Report it!\n            this._addError(token);\n        }\n    }\n\n    _tokenIsInLanguage(token) {\n        utils.typecheckString(token);\n\n        return utils.verifyToken(token);\n    }\n\n    _convertTokenToNote(token, token_position) {\n        utils.typecheckString(token);\n        utils.typecheckNumber(token_position);\n\n        let converter = new TokenToNoteConverter();\n\n        return converter.convert(token, token_position);\n    }\n\n    _addNote(note) {\n        utils.typecheckString(note);\n\n        this._voices[this.getNumVoices()].push(note);\n    }\n\n    _addError(token) {\n        utils.typecheckString(token);\n\n        const token_index = this._token_index - 1;\n        this._errors.push([token, token_index]);\n    }\n}\n\n\nexport default MusicLexer;","\nimport * as types from \"../utils/typecheck\";\n/*\n    This function extracts header values from a header string.\n    Headers are expected to take the following form.\n    \"<TITLE> \\n\" +\n    \"<AUTHOR> \\n\" + \n    \"unit <UNIT> upm <UPM> beat <BEAT>\"\n\n    minimal error checking is done. No time.\n*/\nexport function extractHeader(header) {\n    types.typecheckString(header);\n    let extracted = {};\n    const header_lines = header.trim().split(\"\\n\");\n    if(header_lines.length !== 3) {\n        throw new Error(\"header does not have 3 lines. Headers are expected to take the following form:\\n\"\n            + \"<TITLE> \\n\" +\n            \"<AUTHOR> \\n\" + \n            \"unit <UNIT> upm <UPM> beat <BEAT>\"\n        );\n    }\n    extracted.title = header_lines[0].trim();\n    extracted.author = header_lines[1].trim();\n    \n    const modifiers = header_lines[2].trim().split(/[\\s]+/);\n    if(modifiers.length !== 6) {\n        throw new Error(\"header modifiers were not correctly written. Should be of form 'unit <UNIT> upm <UPM> beat <BEAT>\");\n    } \n\n    let i = 0;\n    while(i < modifiers.length) {\n        if(modifiers[i] === \"unit\") {\n            extracted.unit = parseInt(modifiers[i + 1]);\n        } else if (modifiers[i] === \"upm\") {\n            extracted.upm = parseInt(modifiers[i + 1]);\n        } else if (modifiers[i] === \"beat\") {\n            extracted.beat = parseInt(modifiers[i + 1]);\n        } else {\n            throw new Error(\n                `header modifier token ${modifiers[i]} is invalid. Choose from 'unit', 'upm', and 'beat'`\n            );\n        }\n\n        i += 2;\n    }\n\n    return extracted;\n}","\nimport * as types from \"../utils/typecheck\";\nimport * as utils from \"./MusicGenerator.utils\";\n\n\nconst SCORE_START = \"-ScoreStart-\";\n\n\n// The purpose of this class is to convert \n// strings (likely read from files) that Tone.js\n// can use to play music.\nclass MusicGenerator {\n\n    constructor(lexer, translator) {\n        if(!lexer) {\n            throw new Error(\"Must provide a lexer\");\n        }\n\n        if(!translator) {\n            throw new Error(\"Must provide a translator\");\n        }\n\n        this._lexer = lexer;\n        this._translator = translator;\n        this._author = \"\";\n        this._title = \"\";\n        this._beat = 4;\n        this._unit = 4;\n    }\n\n    hasLexerErrors() {\n        return this._lexer.hasErrors();\n    }\n\n    hasTranslatorErrors() {\n        return this._translator.hasErrors();\n    }\n\n    hasErrors() {\n        return this.hasLexerErrors() || this.hasTranslatorErrors();\n    }\n\n    getErrors() {\n        return this._lexer.getErrors().concat(this._translator.getErrors());\n    }\n\n    getErrorSummary() {\n        return this._lexer.getErrorSummary() + this._translator.getErrorSummary();\n    }\n\n    getGeneratedMusic() {\n        return this._translator.getTranslation();\n    }\n\n    getTitle() {\n        return this._title;\n    }\n\n    getAuthor() {\n        return this._author;\n    }\n\n    hasUnit(unit) {\n        return unit === this._unit;\n    }\n\n    hasBeat(beat) {\n        return beat === this._beat;\n    }\n\n    hasUnitsPerMinute(upm) {\n        return upm === this._translator.getUnitsPerMinute();\n    }\n\n    getBpm() {\n        let beats_per_unit = this._beat / this._unit;\n        let bpm = beats_per_unit * this._translator.getUnitsPerMinute();\n        return bpm;\n    }\n\n    generate(music_file_string) {\n        types.typecheckString(music_file_string);\n\n        this._clearOldGeneratedMusic();\n\n        this._setHeaderValues(this._extractHeaderValues(music_file_string) );\n        \n        this._lex(this._extractScoreValues(music_file_string));\n        this._translate();\n        \n        return this.getGeneratedMusic();\n    }\n\n    _clearOldGeneratedMusic() {\n        // No state needs to be cleared.\n    }\n\n    _setHeaderValues(header) {\n        this._title = header.title ? header.title : \"Unknown\";\n        this._author = header.author ? header.author : \"Unknown\";\n        this._translator.setUnitsPerMinute(header.upm ? header.upm : 60);\n        this._unit = header.unit ? header.unit : 4;\n        this._beat = header.beat ? header.beat : 4;\n    }\n\n    _extractHeaderValues(music_file_string) {\n        types.typecheckString(music_file_string);\n        if(!music_file_string.includes(SCORE_START)) {\n            throw new Error(\"music file requires a string '-ScoreStart-' to denote the end of the header\");\n        }\n        const header = utils.extractHeader(music_file_string.split(SCORE_START)[0]);\n\n        return header;\n    }\n\n    _extractScoreValues(music_file_string) {\n        types.typecheckString(music_file_string);\n        if(!music_file_string.includes(SCORE_START)) {\n            throw new Error(`music file requires a string '${SCORE_START}' to denote the start of the score`);\n        }\n        const score = music_file_string.split(SCORE_START)[1];\n        return score;\n    }\n\n    _lex(score) {\n        types.typecheckString(score);\n        this._lexer.lex(score);\n    }\n\n    _translate() {\n        this._translator.translate(this._lexer.getAllVoices());\n    }\n\n}\n\n\nexport default MusicGenerator;\n","export function existsUserChosenFile() {\n    return document.getElementById(\"user-music\").files.length > 0;\n}\n\n\nexport function getSelectedMusic() {\n    var LAYLA = \n        \"Layla \\n\" +\n        \"Eric Clapton \\n\" +\n        \"unit 16 upm 60 beat 4 \\n \" +\n        \"-ScoreStart- \\n\" +\n        \"A5 C6 D6 E6 D6 A5 C6 ~ ~ ~ E5 E5 E5 ~ D5 D5 C5 D5 E5\";\n\n    const selected = document.getElementById(\"provided-music\").value;\n    if(selected === \"layla\") {\n        return LAYLA;\n    } else if (selected === \"duck\") {\n        return LAYLA;\n    } else if (selected === \"user\") {\n        return LAYLA;\n    } else {\n        throw new Error(\"An invalid selection was made!\");\n    }\n}\n","export function addArrowEvents() {\n    const ids = [1, 2, 3, 4];\n    for(let id of ids) {\n        const arrow_id = \"arrow-\" + id.toString();\n        const arrow = document.getElementById(arrow_id);\n        arrow.addEventListener(\"animationend\", function(event) {\n            arrow.classList.remove(\"explode\");\n        });\n    }\n}","import * as utils from \"./utils\";\nimport Player from \"../player/Player\";\n\nexport function addPreviewEvents(generator) {\n    const previewBtn = document.getElementById(\"start-preview\");\n    const stopBtn = document.getElementById(\"stop-preview\");\n    const player = new Player();\n\n    previewBtn.addEventListener('click', function startPreview(event) {\n        playUserChosenMusic();\n        previewBtn.disabled = true;\n        stopBtn.disabled = false;\n\n        function playUserChosenMusic() {\n            // TODO : For each music playing,\n            // Check if compilation errors occurred!\n            // IF SO, DON'T PLAY THE MUSIC!!!\n            // DISPLAY AN ERROR MESSAGE AND ASK THEM TO CONFIRM.\n            // Or at least display an error message\n            // before starting.\n            if(utils.existsUserChosenFile()) {\n                playUserChosenFile();\n            } else {\n                playUserSelectedMusic();\n            }\n\n            function playUserChosenFile() {\n                let reader = new FileReader();\n                reader.onload = function returnFileAsString(event) {\n                    // When the file has been read, start playing it.\n                    console.log(event.target.result);\n                    generator.generate(event.target.result);\n                    player.schedule(generator.getGeneratedMusic());\n                    player.play();\n                };\n                reader.readAsText(document.getElementById(\"user-music\").files[0]);\n            }\n\n            function playUserSelectedMusic() {\n                generator.generate(utils.getSelectedMusic());\n                player.schedule(generator.getGeneratedMusic());\n                player.play();\n            }\n        }\n    });\n\n    stopBtn.addEventListener('click', function stopPreview(event) {\n        player.stop();\n        previewBtn.disabled = false;\n        stopBtn.disabled = true;\n    });\n\n}","export var Mode = {\n    EASY: 0,\n    MEDIUM: 1,\n    HARD: 2\n}\n\n\nexport function convertDurationsToArrowStartAndEndTimes(durations, mode) {\n    const arrow_start_times = durations\n        .reduce(function convertToNoteStartTime(acc, cur) {\n            // convert durations to scheduled times\n            acc.push(cur + acc[acc.length - 1]);\n            return acc;\n        }, [0])\n        .map(function convertToArrowStartAndEndTime(time) {\n            // TODO TODO : Convert based on MODE.\n            if(mode === Mode.EASY) {\n                return [time - 10, time];\n            } else if (mode === Mode.MEDIUM) {\n                return [time - 7, time];\n            } else if (mode === Mode.HARD) {\n                return [time - 4, time];\n            } else {\n                throw new Error(\"invalid mode detected: \" + mode.toString());\n            }\n        })\n        .filter(function isPositive(times_array) {  // Get rid of negative start times.\n            return times_array[0] >= 0;\n        });\n\n    // Unfortunately the last time is not valid, because no note is scheduled\n    // to begin then.\n    arrow_start_times.pop();\n\n    return arrow_start_times;\n}","\n\nimport * as types from \"../utils/typecheck\";\n\n\n\nexport var Direction = {\n    LEFT: 1,\n    UP: 2,\n    DOWN: 3,\n    RIGHT: 4\n}\n/* // Brief test of the exported functions.\nconst lane_1 = document.getElementById(\"lane-1\");\nconst lane_2 = document.getElementById(\"lane-2\");\nconst lane_3 = document.getElementById(\"lane-3\");\nconst lane_4 = document.getElementById(\"lane-4\");\n\nlane_1.appendChild(createFastArrow(Direction.LEFT));\nlane_2.appendChild(createFastArrow(Direction.UP));\nlane_3.appendChild(createSlowArrow(Direction.DOWN));\nlane_4.appendChild(createMediumArrow(Direction.RIGHT));\n*/\n\nexport function createFastArrow(direction) {\n    return (createArrowFn(addFastMoving))(direction);\n}\n\nexport function createMediumArrow(direction) {\n    return (createArrowFn(addMediumMoving))(direction);\n}\n\nexport function createSlowArrow(direction) {\n    return (createArrowFn(addSlowMoving))(direction);\n}\n\nfunction createArrowFn(speedFn) {\n    return function(direction) {\n        types.typecheckNumber(direction);\n        if(!isADirection(direction)) {\n            throw new Error(direction.toString() + \" is not a valid direction\");\n        }\n\n        if(direction === Direction.LEFT) {\n            return speedFn(createLeftArrow());\n        } else if (direction === Direction.UP) {\n            return speedFn(createUpArrow());\n        } else if (direction === Direction.DOWN) {\n            return speedFn(createDownArrow());\n        } else {\n            return speedFn(createRightArrow());\n        }\n\n        function isADirection(direction) {\n            types.typecheckNumber(direction);\n            if(direction !== Direction.LEFT && direction != Direction.RIGHT &&\n                direction !== Direction.UP && direction !== Direction.DOWN) {\n                return false;\n            }\n            return true;\n        }  \n    }\n}\n\n\nfunction addRemoveOnAnimationEnd(arrow) {\n    arrow.addEventListener(\"animationend\", function removeOnEnd(event) {\n        if(event.animationName === \"slidedown\") {\n            arrow.remove();\n        }\n    }, false);\n    return arrow;\n}\n\nfunction addSlowMoving(arrow) {\n    arrow.classList.add(\"moving-arrow-slow\");\n    addRemoveOnAnimationEnd(arrow);\n    \n    return arrow;\n}\n\nfunction addMediumMoving(arrow) {\n    arrow.classList.add(\"moving-arrow-medium\");\n    addRemoveOnAnimationEnd(arrow);\n\n    return arrow;\n}\n\nfunction addFastMoving(arrow) {\n    arrow.classList.add(\"moving-arrow-fast\");\n    addRemoveOnAnimationEnd(arrow);\n\n    return arrow;\n}\n\nfunction createRightArrow() {\n    const arrow_right = document.createElement(\"i\");\n    arrow_right.classList.add(\"fa\", \"fa-arrow-right\", \"moving-arrow\");\n    return arrow_right;\n}\n\nfunction createLeftArrow() {\n    const arrow_left = document.createElement(\"i\");\n    arrow_left.classList.add(\"fa\", \"fa-arrow-left\", \"moving-arrow\");\n    return arrow_left;\n}\n\nfunction createUpArrow() {\n    const arrow_up = document.createElement(\"i\");\n    arrow_up.classList.add(\"fa\", \"fa-arrow-up\", \"moving-arrow\");\n    return arrow_up;\n}\n\nfunction createDownArrow() {\n    const arrow_down = document.createElement(\"i\");\n    arrow_down.classList.add(\"fa\", \"fa-arrow-down\", \"moving-arrow\");\n    return arrow_down;\n}\n\n\nconsole.log(\"animations are running!\");","\n\nimport * as types from \"../utils/typecheck\";\nimport { Direction, createFastArrow, createMediumArrow, createSlowArrow } from \"./animations\";\nimport Player from \"../player/Player\";\nimport * as utils from \"./GamePlayer.utils\";\nimport { Mode } from \"./GamePlayer.utils\";\n\n\nvar Lane = {\n    LEFT: 1,\n    UP: 2,\n    DOWN: 3,\n    RIGHT: 4,\n}\n\nclass GamePlayer extends Player {\n    constructor() {\n        super();\n        this._mode = Mode.EASY;\n        this._count = 0;\n    }\n\n    getMode() {\n        return this._mode;\n    }\n\n    setMode(mode) {\n        if(mode !== Mode.EASY && mode !== Mode.MEDIUM && mode !== Mode.HARD) {\n            throw new Error(\"Valid modes: '0', '1', '2'\");\n        }\n\n        this._mode = mode;\n    }\n\n    /*\n        example notes:\n        [  // array of voices.\n            [   // each voice is an array of notes and durations to play them.\n                [\"A4\", \"B4\"],\n                [1, 2], // The intention is to play notes in sequence.\n            ],\n            [\n                [\"C4\", \"D4\"],\n                [3, 5],\n\n                // Note that voices do not play at identical times. \"D4\" will start\n                // when \"B4\" ends. That is how the scheduling works.\n            ]\n        ]\n    */\n    schedule(notes) {\n        this._clearOldArrows();\n        super.schedule(notes);\n\n        for(let i = 0; i < notes.length; i++) {\n            const durations = notes[i][1];\n\n            // TODO: Arrow start times need to come with DETERMINISTIC algorithm\n            // that determines speed of given arrow. Also needs to contain\n            // the END time for the arrow at which a key press is expected.\n            // Use Tone.Transport.seconds to compare to this end time!\n            const arrow_start_end_times = utils.convertDurationsToArrowStartAndEndTimes(durations, this._mode);\n            this._scheduleArrows(arrow_start_end_times);\n        }   \n    }\n\n    _clearOldArrows() {\n        Tone.Draw.cancel();\n        this._count = 0;\n    }\n\n    /*  arrow_start_times is an array of pairs, with each pair being\n        the time an arrow starts and the time an arrow is expected\n        to be completed (keyed).\n        Times are in seconds. Times cannot be negative.\n    */\n    _scheduleArrows(arrow_start_end_times) {\n        console.log(\"Scheduling the game in mode \" + this._mode.toString());\n        const createArrowFn = this._createArrow;\n        const _this = this;\n        for(let i = 0; i < arrow_start_end_times.length; i++) {\n            const num_lanes = 4;\n            const lane_number = 1 + Math.floor(Math.random() * num_lanes);\n            const arrow_duration = arrow_start_end_times[i][1] - arrow_start_end_times[i][0];\n            const arrow = createArrowFn.call(_this, lane_number, arrow_duration);\n            const lane_id = \"lane-\" + lane_number.toString();\n            const arrow_id = \"arrow-\" + lane_number.toString();\n            //this._scheduleArrowCompletion(lane_id, arrow_start_end_times[i][1]);\n            const scheduleArrowCompletion = this._scheduleArrowCompletion;\n            Tone.Transport.schedule(function(time) {\n                Tone.Draw.schedule(function drawArrow() {\n                    \n                    document.getElementById(lane_id).appendChild(arrow);\n                    scheduleArrowCompletion.call(_this, arrow_id, arrow_start_end_times[i][1]);\n                });\n            }, arrow_start_end_times[i][0]);\n\n            // TODO : Schedule Tone.Transport to eventually stop??? Or not??\n        }\n    }\n\n    _createArrow(lane_number, arrow_duration) {\n        types.typecheckNumber(lane_number);\n        types.typecheckNumber(arrow_duration);\n        const direction = this._getArrowDirection(lane_number);\n        const arrowCreationFn = this._getArrowCreationFn(arrow_duration);\n\n        return arrowCreationFn(direction);\n    }\n\n    // TODO : move this to utils and TEST IT.\n    //      \n    _getArrowDirection(lane_number) {\n        types.typecheckNumber(lane_number);\n        if(lane_number === Lane.LEFT) {\n            return Direction.LEFT;\n        } else if (lane_number === Lane.UP) {\n            return Direction.UP;\n        } else if (lane_number === Lane.DOWN) {\n            return Direction.DOWN;\n        } else if (lane_number === Lane.RIGHT) {\n            return Direction.RIGHT;\n        } else {\n            throw new Error(lane_number.toString() + \" is not a valid lane number. Valid numbers are 1, 2, 3, and 4\");\n        }\n    }\n\n    _getArrowCreationFn(arrow_duration) {\n        types.typecheckNumber(arrow_duration);\n        if(arrow_duration === 4) {\n            return createFastArrow;\n        } else if (arrow_duration === 7) {\n            return createMediumArrow;\n        } else if (arrow_duration === 10) {\n            return createSlowArrow;\n        } else {\n            throw new Error(\"arrow duration does not match any arrow type's speed\");\n        }\n    }    \n\n    _scheduleArrowCompletion(arrow_id, completion_time) {\n        console.log(\"Scheduling an arrow\");\n        types.typecheckNumber(completion_time);\n        types.typecheckString(arrow_id);\n        if(completion_time < 0) {\n            throw new Error(\"completion time must be non-negative\");\n        }\n\n        const _this = this;\n\n        // TO DO : Add an event listener on the key down event\n        // to check the Tone.Transport.seconds value to see if it\n        // is close enough to when the keydown was pressed!\n        document.addEventListener('keydown', function checkTime(event) {\n            if(isArrowKey(event.code)) {\n                event.preventDefault();\n                if(Math.abs(Tone.Transport.seconds - completion_time) < 0.5) {\n                    console.log(\"Success!\");\n                    const arrow = document.getElementById(arrow_id);\n                    arrow.classList.add(\"explode\");\n                    document.removeEventListener('keydown', checkTime);\n                    \n                    // TODO : This doesn't work because value of 'this'\n                    //      does not refer to the GamePlayer!\n                    incCount.call(_this);\n                    document.getElementById(\"counter\").innerText = \"Count: \" + getCount.call(_this).toString();\n                    \n                    function incCount() {\n                        this._count += 1;\n                    }\n\n                    function getCount() {\n                        return this._count;\n                    }\n                }\n\n                if(Tone.Transport.seconds > completion_time + 1) {\n                    document.removeEventListener('keydown', checkTime);\n                }\n            }\n            \n            function isArrowKey(code) {\n                types.typecheckString(code);\n                if(code === \"ArrowLeft\" || code === \"ArrowRight\" ||\n                        code === \"ArrowUp\" || code === \"ArrowDown\") {\n                    return true;\n                }\n                return false;\n            }\n        });\n    }\n\n\n    play() {\n\n        // TODO: Check that this works!\n        document.getElementById(\"counter\").innerText = \"Count: \" + this._count.toString();\n        super.play();\n    }\n}\n\nexport { GamePlayer, Mode };","\nimport { GamePlayer, Mode } from \"../game-player/GamePlayer\";\nimport * as utils from \"./utils\";\n\nexport function addStartEvents(generator) {\n    const start = document.getElementById(\"start-game\");\n    const pause = document.getElementById(\"pause-game\");\n    const player = new GamePlayer();\n\n    start.addEventListener('click', function startGame(event) {\n        // TODO : Allow player to pause game and restart game!\n        // Currently clicking start again after pausing will\n        // play the game again from the start, which is VERY\n        // problematic.\n        // Perhaps the best thing to do would be to have a pause menu come up?\n        // Or have a Resume button that activates only when the game is paused.\n\n        playGame();\n        console.log(\"play game!\");\n\n        start.disabled = true;\n        pause.disabled = false;\n\n        function playGame() {\n            // TODO : For each music playing,\n            // Check if compilation errors occurred!\n            // IF SO, DON'T PLAY THE MUSIC!!!\n            // DISPLAY AN ERROR MESSAGE AND ASK THEM TO CONFIRM.\n            // Or at least display an error message\n            // before starting.\n            if(utils.existsUserChosenFile()) {\n                console.log(\"A file is selected!\");\n                playGameWithChosenFile();\n            } else {\n                console.log(\"no file was selected\");\n                playGameWithSelectionMusic();\n            }\n\n            function playGameWithChosenFile() {\n                const reader = new FileReader();\n                reader.onload = function(event) {\n                    const music = event.target.result;\n                    generator.generate(music);\n                    doPlay(generator.getGeneratedMusic());\n                }\n                reader.readAsText(document.getElementById(\"user-music\").files[0]);\n            }\n\n            function playGameWithSelectionMusic() {\n                const music = generator.generate(utils.getSelectedMusic());\n                doPlay(music);\n            }\n\n            function doPlay(music) {\n                const setting = document.querySelector('input[name = \"difficulty\"]:checked').value;\n                console.log(setting);\n                if(setting === \"easy\" ) {\n                    player.setMode(Mode.EASY);\n                } else if (setting === \"medium\") {\n                    player.setMode(Mode.MEDIUM);\n                } else if (setting === \"hard\") {\n                    player.setMode(Mode.HARD);\n                } else {\n                    throw new Error(\"Invalid mode selected for DDR\");\n                }\n                // Music is an array generated by the generator.\n                // DOES NOT CHECK that music is in correct form!\n                player.schedule(music);\n                player.play();\n\n            }\n        }\n    });\n\n    pause.addEventListener('click', function pause(event) {\n        // TODO: Pause the game. But don't RESET it!!!!\n        pauseGame();\n        start.disabled = false;\n        pause.disabled = true;\n\n        function pauseGame() {\n            console.log(\"pause game!\");\n            player.pause();\n        }\n    });\n}","import MusicGenerator from \"./generator/MusicGenerator\";\nimport MusicLexer from \"./lexer/MusicLexer\";\nimport MusicTranslator from \"./translator/MusicTranslator\";\nimport * as start_events from \"./index-utils/start-events\";\nimport * as preview_events from \"./index-utils/preview-events\";\nimport * as arrow_events from \"./index-utils/arrow-events\";\n\n(function main() {\n    const generator = new MusicGenerator(new MusicLexer(), new MusicTranslator());\n\n    window.onload = function initUserInteractions(event) {\n        console.log(\"Script running at load\");\n\n        arrow_events.addArrowEvents();\n        preview_events.addPreviewEvents(generator);\n        start_events.addStartEvents(generator);\n    };\n})();"],"sourceRoot":""}